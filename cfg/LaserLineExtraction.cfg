#!/usr/bin/env python
PACKAGE = "laser_line_extraction"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("frequency",    double_t,    0, "Frequency of node", 15,  0, 100)
gen.add("frame_id", str_t, 0, "The frame in which the line segments are published", "rb1_base_front_laser_link")
gen.add("scan_topic",    str_t,    0, "The LaserScan topic.",  "/rb1_base/scan_for_lines")
gen.add("publish_markers",   bool_t,   0, "Whether or not markers are published.",  True)
gen.add("bearing_std_dev", double_t, 0, "The standard deviation of bearing uncertainty in the laser scans (rad)", 0.00001)
gen.add("range_std_dev", double_t, 0, "The standard deviation of range uncertainty in the laser scans (m).", 0.012)
gen.add("least_sq_angle_thresh", double_t, 0, "Change in angle (rad) threshold to stop iterating least squares (least_sq_radius_thresh must also be met).", 0.00001)
gen.add("least_sq_radius_thresh", double_t, 0, "Change in radius (m) threshold to stop iterating least squares (least_sq_angle_thresh must also be met).", 0.00001)
gen.add("max_line_gap", double_t, 0, "The maximum distance between two points in the same line (m).", 0.25)
gen.add("min_line_length", double_t, 0, "Lines shorter than this are not published (m).", 0.38)
gen.add("min_range", double_t, 0, "Points closer than this are ignored (m).", 0.4)
gen.add("min_split_dist", double_t, 0, "When performing -split- step of split and merge, a split between two points results when the two points are at least this far apart (m).", 0.24)
gen.add("outlier_dist", double_t, 0, "Points who are at least this distance from all their neighbours are considered outliers (m).", 0.4)
gen.add("min_line_points", int_t, 0, "Lines with fewer points than this are not published.", 20)



exit(gen.generate(PACKAGE, "line_extraction", "LaserLineExtraction"))
